[{"/Users/anamkhan/spotify-login/client/src/index.js":"1","/Users/anamkhan/spotify-login/client/src/App.js":"2","/Users/anamkhan/spotify-login/client/src/Router.js":"3","/Users/anamkhan/spotify-login/client/src/context/AuthContext.js":"4","/Users/anamkhan/spotify-login/client/src/components/auth/Login.js":"5","/Users/anamkhan/spotify-login/client/src/components/layout/Navbar.js":"6","/Users/anamkhan/spotify-login/client/src/components/customers/Customers.js":"7","/Users/anamkhan/spotify-login/client/src/components/auth/Register.js":"8","/Users/anamkhan/spotify-login/client/src/components/customers/CustomerForm.js":"9","/Users/anamkhan/spotify-login/client/src/components/auth/LogOutBtn.js":"10","/Users/anamkhan/spotify-login/client/src/components/customers/CustomerList.js":"11","/Users/anamkhan/spotify-login/client/src/components/layout/Home.js":"12","/Users/anamkhan/spotify-login/client/src/components/layout/testSpotify.js":"13","/Users/anamkhan/react-coding-challenge/client/src/index.js":"14","/Users/anamkhan/react-coding-challenge/client/src/App.js":"15","/Users/anamkhan/react-coding-challenge/client/src/Router.js":"16","/Users/anamkhan/react-coding-challenge/client/src/context/AuthContext.js":"17","/Users/anamkhan/react-coding-challenge/client/src/components/layout/Navbar.js":"18","/Users/anamkhan/react-coding-challenge/client/src/components/auth/Register.js":"19","/Users/anamkhan/react-coding-challenge/client/src/components/auth/Login.js":"20","/Users/anamkhan/react-coding-challenge/client/src/components/layout/Home.js":"21","/Users/anamkhan/react-coding-challenge/client/src/components/auth/LogOutBtn.js":"22","/Users/anamkhan/react-coding-challenge/client/src/components/layout/featuredPlaylists.js":"23","/Users/anamkhan/react-coding-challenge/client/src/components/layout/newReleases.js":"24","/Users/anamkhan/react-coding-challenge/client/src/components/layout/categories.js":"25","/Users/anamkhan/react-coding-challenge/client/src/components/layout/savedList.js":"26"},{"size":197,"mtime":1623291472122,"results":"27","hashOfConfig":"28"},{"size":313,"mtime":1623291472116,"results":"29","hashOfConfig":"28"},{"size":1145,"mtime":1623377417650,"results":"30","hashOfConfig":"28"},{"size":716,"mtime":1623295294898,"results":"31","hashOfConfig":"28"},{"size":1305,"mtime":1623297302207,"results":"32","hashOfConfig":"28"},{"size":687,"mtime":1623377146871,"results":"33","hashOfConfig":"28"},{"size":706,"mtime":1623377201951,"results":"34","hashOfConfig":"28"},{"size":1326,"mtime":1623296347291,"results":"35","hashOfConfig":"28"},{"size":937,"mtime":1623295232056,"results":"36","hashOfConfig":"28"},{"size":572,"mtime":1623294653687,"results":"37","hashOfConfig":"28"},{"size":306,"mtime":1623291472120,"results":"38","hashOfConfig":"28"},{"size":7984,"mtime":1623384329252,"results":"39","hashOfConfig":"28"},{"size":598,"mtime":1623379197557,"results":"40","hashOfConfig":"28"},{"size":197,"mtime":1623291472122,"results":"41","hashOfConfig":"42"},{"size":420,"mtime":1623714271880,"results":"43","hashOfConfig":"42"},{"size":1491,"mtime":1623714229177,"results":"44","hashOfConfig":"42"},{"size":716,"mtime":1623295294898,"results":"45","hashOfConfig":"42"},{"size":1529,"mtime":1623706280840,"results":"46","hashOfConfig":"42"},{"size":1326,"mtime":1623296347291,"results":"47","hashOfConfig":"42"},{"size":1305,"mtime":1623297302207,"results":"48","hashOfConfig":"42"},{"size":2017,"mtime":1623711416990,"results":"49","hashOfConfig":"42"},{"size":572,"mtime":1623294653687,"results":"50","hashOfConfig":"42"},{"size":2714,"mtime":1623712512086,"results":"51","hashOfConfig":"42"},{"size":2597,"mtime":1623712501846,"results":"52","hashOfConfig":"42"},{"size":2620,"mtime":1623712488247,"results":"53","hashOfConfig":"42"},{"size":1493,"mtime":1623711788331,"results":"54","hashOfConfig":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"19g8xeq",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1l4g5ip",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"84"},"/Users/anamkhan/spotify-login/client/src/index.js",[],["115","116"],"/Users/anamkhan/spotify-login/client/src/App.js",[],"/Users/anamkhan/spotify-login/client/src/Router.js",[],"/Users/anamkhan/spotify-login/client/src/context/AuthContext.js",[],"/Users/anamkhan/spotify-login/client/src/components/auth/Login.js",[],"/Users/anamkhan/spotify-login/client/src/components/layout/Navbar.js",["117"],"/Users/anamkhan/spotify-login/client/src/components/customers/Customers.js",[],"/Users/anamkhan/spotify-login/client/src/components/auth/Register.js",[],"/Users/anamkhan/spotify-login/client/src/components/customers/CustomerForm.js",[],"/Users/anamkhan/spotify-login/client/src/components/auth/LogOutBtn.js",[],"/Users/anamkhan/spotify-login/client/src/components/customers/CustomerList.js",[],"/Users/anamkhan/spotify-login/client/src/components/layout/Home.js",["118","119","120","121"],"/Users/anamkhan/spotify-login/client/src/components/layout/testSpotify.js",[],"/Users/anamkhan/react-coding-challenge/client/src/index.js",[],["122","123"],"/Users/anamkhan/react-coding-challenge/client/src/App.js",[],"/Users/anamkhan/react-coding-challenge/client/src/Router.js",[],"/Users/anamkhan/react-coding-challenge/client/src/context/AuthContext.js",[],"/Users/anamkhan/react-coding-challenge/client/src/components/layout/Navbar.js",["124"],"import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthContext from \"../../context/AuthContext\";\nimport LogOutBtn from \"../auth/LogOutBtn\";\nimport axios from 'axios';\n\nfunction Navbar() {\n  const { loggedIn } = useContext(AuthContext);\n\n  return (\n    <div>\n      <Link to=\"/\">Home</Link>\n      {loggedIn === false && (\n        <>\n          <Link to=\"/register\">Register</Link>\n          <Link to=\"/login\">Log in</Link>\n        </>\n      )}\n      {loggedIn === true && (\n        <>\n          <Link to=\"/customer\">Customers</Link>\n          <LogOutBtn />\n        </>\n      )}\n        <div>\n      </div>\n    </div>\n  \n  );\n}\n\nexport default Navbar;\n","/Users/anamkhan/react-coding-challenge/client/src/components/auth/Register.js",[],"/Users/anamkhan/react-coding-challenge/client/src/components/auth/Login.js",[],"/Users/anamkhan/react-coding-challenge/client/src/components/layout/Home.js",["125","126","127","128","129","130","131","132","133","134","135","136","137","138","139"],"import React, {useState, useEffect, useRef} from \"react\";\nimport axios from 'axios';\nimport FeaturedPlaylist from './featuredPlaylists';\nimport NewReleases from './newReleases';\nimport Categories from './categories';\nimport './app.css';\n\n\n\nrequire('dotenv').config();\n\n\nfunction Home(props){\n    const spotifyClientId = process.env.REACT_APP_CLIENT_ID;\n    const spotifySecret = process.env.REACT_APP_CLIENT_SECRET;\n\n    const [newReleaseData, setNewReleases] = useState(null);\n    const [featuredPlaylist, setFeaturedPlaylist] = useState(null);\n    const [categories, setCategories] = useState(null);\n    const [token, setToken] = useState(null);\n    const [nameText,  setNameTextState] = React.useState(\"\");\n    const [imgText,  setImgTextState] = React.useState(\"\");\n    const [artistText,  setArtistTextState] = React.useState(\"\");\n    const [isActive, setActive] = useState(false);\n\n   \n    useEffect((e) => {\n    axios('https://accounts.spotify.com/api/token', {\n          headers: {\n            'Content-Type' : 'application/x-www-form-urlencoded',\n            'Authorization' : 'Basic ' + btoa(spotifyClientId + ':' + spotifySecret),\n            // 'Access-Control-Allow-Credentials' : 'true',\n\n          },\n          data: 'grant_type=client_credentials',\n          method: 'POST'\n        })\n        .then(response => setToken(response.data));\n      },[spotifyClientId, spotifySecret]);\n      axios.post(\"http://localhost:4000/playlist/token\", token);\n      // localStorage.setItem('myData', token);\n\n    return(\n        <>\n\n{!token ?  (\n                            \n                            <div>\n                                Loading \n                            </div>\n                            ) : (\n                               <div>\n                                  <NewReleases/>\n                                  <FeaturedPlaylist/>\n                                  <Categories/>\n                              </div>\n                            )}       \n\n</>\n    )\n}\n\nexport default Home;","/Users/anamkhan/react-coding-challenge/client/src/components/auth/LogOutBtn.js",[],"/Users/anamkhan/react-coding-challenge/client/src/components/layout/featuredPlaylists.js",["140","141","142"],"import { Button } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction FeaturedPlaylist(props){\n    \n    const [featured, setFeaturedPlaylist] = useState(\"\");\n    const[name, setName] = useState(\"\");\n    const [image, setImage] = useState(\"\")\n    \n      \n\n      useEffect(() => {\n        axios.get('http://localhost:4000/playlist/featured/')\n        .then(response => setFeaturedPlaylist(response.data));\n      }, [setFeaturedPlaylist]);\n\n      const handleInputChange = e => {\n        \n        console.log(e.target.src);\n        setImage(e.target.src);\n      }\n\n      const  submitForm = e => {\n\n\n        const newPlaylist ={\n\n          playlist_image: image,\n          playlist_name: 'testing'\n\n         }\n\n         axios.post('http://localhost:4000/playlist/add', newPlaylist)\n\n         console.log(image);\n         if(image){ axios.post('http://localhost:4000/playlist/add', newPlaylist)\n         .then(res => console.log(res.data))\n        //  .then(history.push(\"/users\"));\n       }\n\n       else ( alert('please select an album') && e.preventDefault() )\n      }\n\nreturn(\n\n    <>\n\n\n                            {!featured ?  (\n                            \n                            <div>\n                                Loading\n                            </div>\n                            ) : (\n<>\n\n                                <div className='flex' style={{background : 'grey'}}>\n                                  <h2> Featured Playlists</h2>\n                                      {console.log(featured)}\n                                      {/* {console.log(featured.description)} */}\n                                      {/* <input type='hidden' value={name}></input> */}\n                                   <input type='hidden' value={image}></input>\n\n                                {featured.playlists.items.map((data, index) => {\n                                return(\n\n                                    <div className=\"items\" style={{margin: '15px'}} name={data.name} src={data.images[0].url} key={index} onClick={ e => handleInputChange(e)}>\n\n                                        <p key={index}><br></br> <img src={data.images[0].url}></img> <br></br> {data.name}  </p>\n\n                                    </div>)\n                                }\n                                )}\n                                </div>\n\n                              <Button  variant=\"contained\" color=\"secondary\" className=\"btn\"  onClick={e => submitForm(e)}>Add to playlist</Button> \n                              </>\n\n                                \n                            )}\n\n\n   </>\n)\n      \n}\n\nexport default FeaturedPlaylist;","/Users/anamkhan/react-coding-challenge/client/src/components/layout/newReleases.js",["143"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"@material-ui/core\";\n\nfunction NewReleases(props){\n    \n    const [newReleases, setNewReleases] = useState(\"\");\n    const [image, setImage] = useState(\"\")\n\n \n    \n      \n\n      useEffect(() => {\n        axios.get('http://localhost:4000/playlist/newreleases/')\n        .then(response => setNewReleases(response.data));\n      }, [setNewReleases]);\n\n\n      const handleInputChange = e => {\n        \n        console.log(e.target.src);\n        setImage(e.target.src);\n      }\n\n      const  submitForm = e => {\n        const newPlaylist ={\n\n          playlist_image: image,\n          playlist_name: 'testing'\n\n         }\n\n         axios.post('http://localhost:4000/playlist/add', newPlaylist)\n\n         console.log(image);\n         if(image){ axios.post('http://localhost:4000/playlist/add', newPlaylist)\n         .then(res => console.log(res.data))\n        //  .then(history.push(\"/users\"));\n       }\n\n       else ( alert('please select an album') && e.preventDefault() )\n      }\n\nreturn(\n\n    <>\n\n\n                            {!newReleases ?  (\n                            \n                            <div>\n                                Loading\n                            </div>\n                            ) : (\n                              <>\n\n                                <div className='flex' style={{background : 'grey'}}>\n                                                                      <h2> New Releases</h2>\n\n                                    {/* <input type='hidden' value=\"\"></input> */}\n                                   <input type='hidden' value={image}></input>\n                                {  newReleases.albums.items.map((data, index) => {\n                                return(\n                                    \n                                    <div className=\"items\" style={{margin: '15px'}} key={index} onClick={ e => handleInputChange(e)}>\n\n                                        <p key={index}><br></br> <img src={data.images[0].url}></img><br></br> {data.name}  </p>\n                                    </div>)\n                                }\n                                )}\n                                </div>\n                                                                <Button  variant=\"contained\" color=\"secondary\" className=\"btn\"  onClick={e => submitForm(e)}>Add to playlist</Button> \n                                                                </>\n\n\n                            )}\n\n   </>\n)\n      \n}\n\nexport default NewReleases;","/Users/anamkhan/react-coding-challenge/client/src/components/layout/categories.js",["144","145","146"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"@material-ui/core\";\n\n\nfunction Categories(props){\n    \n    const [categories, setCategories] = useState(\"\");\n    const[name, setName] = useState(\"\");\n    const [image, setImage] = useState(\"\")\n    \n\n      useEffect(() => {\n        axios.get('http://localhost:4000/playlist/categories/')\n        .then(response => setCategories(response.data));\n      }, [setCategories]);\n\n\n      const handleInputChange = e => {\n        \n        console.log(e.target.src);\n        // console.log(e.target.key);\n\n        setImage(e.target.src);\n      }\n\n      const  submitForm = e => {\n        const newPlaylist ={\n\n          playlist_image: image,\n          playlist_name: 'testing'\n\n         }\n\n         axios.post('http://localhost:4000/playlist/add', newPlaylist)\n\n         console.log(image);\n         if(image){ axios.post('http://localhost:4000/playlist/add', newPlaylist)\n         .then(res => console.log(res.data))\n        //  .then(history.push(\"/users\"));\n       }\n\n       else ( alert('please select an album') && e.preventDefault() )\n      }\n\n\n      \n      \n\nreturn(\n\n    <>\n\n\n                            {!categories ?  (\n                            \n                            <div>\n                                Loading \n                            </div>\n                            ) : (\n<>\n                                \n                                <div className='flex' style={{display: 'flex', padding : '10px', marginLeft: '10px'}}>\n                                  <h2>Categories</h2>\n                                  {/* <input type='' value=\"\"></input> */}\n                                   <input type='hidden' value={image}></input>\n                                {categories.categories.items.map((data, index) => {\n                                return(\n\n                                    <div className=\"items\" style={{margin: '15px'}} key={data['name']} id={data['name']} value={data.icons[0].url} onClick={ e => handleInputChange(e)} >\n\n                                        <p key={index}><br></br> <img src={data.icons[0].url}></img> <br></br> {data['name']} </p>\n                                    </div>)\n                                }\n                                )}\n                                </div>\n                                <Button  variant=\"contained\" color=\"secondary\" className=\"btn\"  onClick={e => submitForm(e)}>Add to playlist</Button> \n\n                                </>\n\n                            )}\n\n   </>\n)\n      \n}\n\nexport default Categories;","/Users/anamkhan/react-coding-challenge/client/src/components/layout/savedList.js",["147"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\n\n function SavedPlaylists(props) {\n\n    const [saved, setSaved] = useState([]);\n\n    useEffect(() => {\n        axios.get('http://localhost:4000/playlist/saved/')\n        .then(response => setSaved(response.data));\n    },[]);\n\n\n\n    return(\n\n        <div>\n\n\n            {!saved ?  (\n                            \n                            <div>\n                                Loading\n                            </div>\n                            ) : (\n                                <div className='flex' style={{display: 'flex', padding : '10px', marginLeft: '10px'}}>\n                                    {console.log(saved[0])}\n                        {/* <p  ><br></br>Playlist: {saved.map}  </p> */}\n\n                                        {saved.map((data, index) => {\n\n                                           return (\n                                               <div className='items'>\n                                               <p>{data.playlist_name}</p>\n                                               <img src={data.playlist_image}></img>\n                                               </div>\n                                           )\n                                           \n                                           })};\n\n\n\n                                </div>\n                                \n                            )}\n        </div>\n\n    )\n}\n\nexport default SavedPlaylists;",{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":5,"column":8,"nodeType":"154","messageId":"155","endLine":5,"endColumn":13},{"ruleId":"152","severity":1,"message":"156","line":1,"column":37,"nodeType":"154","messageId":"155","endLine":1,"endColumn":43},{"ruleId":"152","severity":1,"message":"157","line":18,"column":28,"nodeType":"154","messageId":"155","endLine":18,"endColumn":42},{"ruleId":"152","severity":1,"message":"158","line":19,"column":30,"nodeType":"154","messageId":"155","endLine":19,"endColumn":49},{"ruleId":"152","severity":1,"message":"159","line":20,"column":24,"nodeType":"154","messageId":"155","endLine":20,"endColumn":37},{"ruleId":"148","replacedBy":"160"},{"ruleId":"150","replacedBy":"161"},{"ruleId":"152","severity":1,"message":"153","line":5,"column":8,"nodeType":"154","messageId":"155","endLine":5,"endColumn":13},{"ruleId":"152","severity":1,"message":"156","line":1,"column":37,"nodeType":"154","messageId":"155","endLine":1,"endColumn":43},{"ruleId":"152","severity":1,"message":"162","line":17,"column":12,"nodeType":"154","messageId":"155","endLine":17,"endColumn":26},{"ruleId":"152","severity":1,"message":"163","line":17,"column":28,"nodeType":"154","messageId":"155","endLine":17,"endColumn":42},{"ruleId":"152","severity":1,"message":"164","line":18,"column":12,"nodeType":"154","messageId":"155","endLine":18,"endColumn":28},{"ruleId":"152","severity":1,"message":"158","line":18,"column":30,"nodeType":"154","messageId":"155","endLine":18,"endColumn":49},{"ruleId":"152","severity":1,"message":"165","line":19,"column":12,"nodeType":"154","messageId":"155","endLine":19,"endColumn":22},{"ruleId":"152","severity":1,"message":"159","line":19,"column":24,"nodeType":"154","messageId":"155","endLine":19,"endColumn":37},{"ruleId":"152","severity":1,"message":"166","line":21,"column":12,"nodeType":"154","messageId":"155","endLine":21,"endColumn":20},{"ruleId":"152","severity":1,"message":"167","line":21,"column":23,"nodeType":"154","messageId":"155","endLine":21,"endColumn":39},{"ruleId":"152","severity":1,"message":"168","line":22,"column":12,"nodeType":"154","messageId":"155","endLine":22,"endColumn":19},{"ruleId":"152","severity":1,"message":"169","line":22,"column":22,"nodeType":"154","messageId":"155","endLine":22,"endColumn":37},{"ruleId":"152","severity":1,"message":"170","line":23,"column":12,"nodeType":"154","messageId":"155","endLine":23,"endColumn":22},{"ruleId":"152","severity":1,"message":"171","line":23,"column":25,"nodeType":"154","messageId":"155","endLine":23,"endColumn":43},{"ruleId":"152","severity":1,"message":"172","line":24,"column":12,"nodeType":"154","messageId":"155","endLine":24,"endColumn":20},{"ruleId":"152","severity":1,"message":"173","line":24,"column":22,"nodeType":"154","messageId":"155","endLine":24,"endColumn":31},{"ruleId":"152","severity":1,"message":"174","line":8,"column":11,"nodeType":"154","messageId":"155","endLine":8,"endColumn":15},{"ruleId":"152","severity":1,"message":"175","line":8,"column":17,"nodeType":"154","messageId":"155","endLine":8,"endColumn":24},{"ruleId":"176","severity":1,"message":"177","line":70,"column":66,"nodeType":"178","endLine":70,"endColumn":96},{"ruleId":"176","severity":1,"message":"177","line":68,"column":66,"nodeType":"178","endLine":68,"endColumn":96},{"ruleId":"152","severity":1,"message":"174","line":9,"column":11,"nodeType":"154","messageId":"155","endLine":9,"endColumn":15},{"ruleId":"152","severity":1,"message":"175","line":9,"column":17,"nodeType":"154","messageId":"155","endLine":9,"endColumn":24},{"ruleId":"176","severity":1,"message":"177","line":72,"column":66,"nodeType":"178","endLine":72,"endColumn":95},{"ruleId":"176","severity":1,"message":"177","line":35,"column":48,"nodeType":"178","endLine":35,"endColumn":79},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'setReleaseData' is assigned a value but never used.","'setFeaturedPlaylist' is assigned a value but never used.","'setCategories' is assigned a value but never used.",["179"],["180"],"'newReleaseData' is assigned a value but never used.","'setNewReleases' is assigned a value but never used.","'featuredPlaylist' is assigned a value but never used.","'categories' is assigned a value but never used.","'nameText' is assigned a value but never used.","'setNameTextState' is assigned a value but never used.","'imgText' is assigned a value but never used.","'setImgTextState' is assigned a value but never used.","'artistText' is assigned a value but never used.","'setArtistTextState' is assigned a value but never used.","'isActive' is assigned a value but never used.","'setActive' is assigned a value but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]